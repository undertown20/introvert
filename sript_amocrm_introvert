<?php
$tasks['add'] = array(
    #Привязываем к сделке
    array(
        'element_id' => 3698754, #ID сделки
        'element_type' => 2, #Показываем, что это - сделка, а не контакт
        'task_type' => 1, #Звонок
        'text' => 'My First Task',
        'responsible_user_id' => 109999,
        'complete_till_at' => 1375285346,
    ),
);
/* Теперь подготовим данные, необходимые для запроса к серверу */
$subdomain = 'test'; #Наш аккаунт - поддомен
#Формируем ссылку для запроса
$link = 'https://' . $subdomain . '.amocrm.ru/api/v2/tasks';
//Формирую ссылку для запроса с фильтром выборки сделок без задач
header('Content-Type: text/html; charset=utf-8');

$root=__DIR__.DIRECTORY_SEPARATOR;

require $root.'prepare.php'; #Здесь будут производиться подготовительные действия, объявления функций и т.д.
require $root.'auth.php'; #Здесь будет происходить авторизация пользователя
require $root.'leads_list.php'; #Получаем список сделок без задач
require $root.'leads_id.php'; #Записываем id полученных задач в массив
require $root.'tasks.php'; #Формируем задачи в пакет для запроса на добавление задач
require $root.'tasks_set.php'; #Отправляем запрос на добавление пакета задач

$leads_id = array();

// Проверяем, есть ли доступ к данным и записываем в массив ID сделок, у которых нет задач.
if(isset($leads_list['leads'])) {
    
    foreach($leads_list['leads'] as $leads) {
        if(is_array($leads) && isset($leads['id'])) {
            if ($leads['closest_task'] == 0) {
                array_push($leads_id, $leads['id']);
            }
        } else {
            die('Невозможно получить поле "ID сделки"');
        } 
    }

} else {
    die('Невозможно получить "Список сделок"');
}
//Формирую ссылку для запроса с фильтром выборки сделок без задач
$link='https://'.$subdomain.'.amocrm.ru/private/api/v2/json/leads/list';

$curl = curl_init(); #Сохраняем дескриптор сеанса cURL
#Устанавливаем необходимые опции для сеанса cURL
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_USERAGENT, 'amoCRM-API-client/1.0');
curl_setopt($curl, CURLOPT_URL, $link);
curl_setopt($curl, CURLOPT_CUSTOMREQUEST, 'POST');
curl_setopt($curl, CURLOPT_POSTFIELDS, json_encode($tasks));
curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type: application/json'));
curl_setopt($curl, CURLOPT_HEADER, false);
curl_setopt($curl, CURLOPT_COOKIEFILE, dirname(__FILE__) . '/cookie.txt'); #PHP>5.3.6 dirname(__FILE__) -> __DIR__
curl_setopt($curl, CURLOPT_COOKIEJAR, dirname(__FILE__) . '/cookie.txt'); #PHP>5.3.6 dirname(__FILE__) -> __DIR__
curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0);
curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 0);


$out = curl_exec($curl); #Инициируем запрос к API и сохраняем ответ в переменную
$code = curl_getinfo($curl, CURLINFO_HTTP_CODE);
/* Теперь мы можем обработать ответ, полученный от сервера. Это пример. Вы можете обработать данные своим способом. */

$code = (int) $code;
$errors = array(
    301 => 'Moved permanently',
    400 => 'Bad request',
    401 => 'Unauthorized',
    403 => 'Forbidden',
    404 => 'Not found',
    500 => 'Internal server error',
    502 => 'Bad gateway',
    503 => 'Service unavailable',
);
try
{
    #Если код ответа не равен 200 или 204 - возвращаем сообщение об ошибке
    if ($code != 200 && $code != 204) {
        throw new Exception(isset($errors[$code]) ? $errors[$code] : 'Undescribed error', $code);
    }

} catch (Exception $E) {
    die('Ошибка: ' . $E->getMessage() . PHP_EOL . 'Код ошибки: ' . $E->getCode());
}
/**
 * Данные получаем в формате JSON, поэтому, для получения читаемых данных,
 * нам придётся перевести ответ в формат, понятный PHP
 */
$Response=json_decode($out,true);
$Response=$Response['response']['tasks']['add'];

$output='ID добавленных задач:'.PHP_EOL;

foreach($Response as $v)
  if(is_array($v))
    $output.=$v['id'].PHP_EOL;

echo $output;
?>

